library(ggplot2)
library(dplyr)
library(showtext)
font_add("QYuan","cwTeXQYuan-Medium.ttf") # 新增字體
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point()
p1
p1+
theme(panel.grid.major.y=element_line())->p1
p1
p1 + theme(axis.line = element_line(size = 3, colour = "grey"))
p1 + theme(axis.line = element_line(size = 3, colour = "grey30"))
p1 + theme(axis.line = element_line(size = 3, colour = "grey90"))
p1 + theme(axis.line = element_line(size = 3, colour = "blue70"))
p1 + theme(axis.line = element_line(size = 3, colour = "blue"))
p1 + theme(axis.line = element_line(size = 3, colour = "blue30
"))
p1 + theme(axis.line = element_line(size = 3, colour = "blue30"))
p1 + theme(axis.line = element_line(size = 3, colour = "gray30"))
p1 + theme(axis.line = element_line(size = 3, colour = "gray70"))
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point()
p1
p1+
theme(panel.grid.major.y=element_line())->p1
p1
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point()
p1
library(ggplot2)
library(dplyr)
library(showtext)
font_add("QYuan","cwTeXQYuan-Medium.ttf") # 新增字體
library(ggplot2)
library(dplyr)
library(showtext)
showtext_auto(enable=TRUE)
theme_set(theme_classic())
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point()
p1
p1+
theme(panel.grid.major.y=element_line())->p1
p1
p1 + theme(axis.line = element_line(size = 3, colour = "gray70"))
p1 + theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p1+
theme(panel.grid.major.y=element_line(color = "#adadad",size = 0.1))->p1
p1
p2 + theme(axis.line.y = element_line(size=0))
p2+
theme(panel.grid.major.y=element_line())->p2
p2 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point()
p2
p2+
theme(panel.grid.major.y=element_line())->p2
p2
p2 + theme(axis.line.y = element_line(size=0))
p1 + theme(axis.line = element_line(size = 3, colour = "gray70"))
p1 + theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(axis.line.y = element_line(size=0))
p2 + theme(axis.line.y = element_line(size=0))
p2 + theme(  axis.line.y = element_blank(), #or-> element_line(size = 0)  axis.ticks.y = element_blank())
p1 + theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(  axis.line.y = element_blank(size=0), #or-> element_line(size = 0)  axis.ticks.y = element_blank())
```{r}
p2 + theme(  axis.line.y = element_blank(size=0), #or-> element_line(size = 0)  axis.ticks.y = element_blank())
p2+
theme(axis.line.y=element_line())->p2
p2
p2 + theme(axis.line.y = element_line(size=0))
p2 + theme(  axis.line.y = element_blank(size=0), #or-> element_line(size = 0)  axis.ticks.y = element_blank())
p2 + theme(  axis.line.y = element_blank(size=0), #or-> element_line(size = 0)  axis.ticks.y = element_blank())
p2 + theme(  axis.line.y = element_blank())
p1 + theme(axis.line = element_line(size = 3, colour = "gray70"))
p1 + theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(axis.line = element_line(size = 3, colour = "gray70"))
p2 + theme(axis.line.y = element_line(size = 3, colour = "gray70"))
p2 + theme(panel.grid.major.y = element_line(size = 3, colour = "gray70"))
p2 + theme(axis.text = element_line(size = 3, colour = "gray70"))
p1 + theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(axis.text = element_line(size = 3, colour = "gray70"))
p2 + theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(  axis.line.y = element_blank())+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(  axis.line.y = element_blank())
+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(  axis.line.y = element_blank())
+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(  axis.line.y = element_blank())
+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(  axis.line.y = element_blank())
+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(  axis.line.y = element_blank())
+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(  axis.line.y = element_blank())+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(  axis.line.y = element_blank())+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))+ theme( axis.text.x = element_line(size = 3, colour = "gray70"))
p2 + theme(  axis.line.y = element_blank())+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(axis.text = element_line(size = 3, colour = "gray70"))
p2 + theme(axis.text = element_line(size = 1, colour = "gray70"))
p2 + theme(axis.text.x.bottom =  = element_line(size = 1, colour = "gray70"))
p2 + theme(axis.text.x.bottom = element_line(size = 1, colour = "gray70"))
p2 + theme(axis.text.x = element_line(size = 1, colour = "gray70"))
p2 + theme(axis.line = element_line(size = 1, colour = "gray70"))
p2 + theme(axis.line.x =element_line(size = 1, colour = "gray70"))
p2 + theme(axis.line.y = element_blank())+axis.line.x =element_line(size = 1, colour = "gray70"))
p2 + theme(axis.line.y = element_blank()+axis.line.x =element_line(size = 1, colour = "gray70"))
p2 + theme( axis.line.y = element_blank()+axis.line.x =element_line(size = 1, colour = "gray70"))
p2 + theme(  axis.line.y = element_blank())+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1)+axis.line.x =element_line(size = 1, colour = "gray70"))
p2 + theme(  axis.line.y = element_blank())+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme( axis.line.y = element_blank())+axis.line.x =element_line(size = 1, colour = "gray70"))
p2 + theme(axis.line.x =element_line(size = 1, colour = "gray70"))
p2 + theme(axis.line.x =element_line(size = 1, colour = "gray70"))
+ theme(  axis.line.y = element_blank())+ theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
p2 + theme(axis.line.x =element_line(size = 1, colour = "gray70"))
+ theme(  axis.line.y = element_blank())+ theme(axis.text = element_text(colour = "blue"))
p2 + theme(axis.line.x =element_line(size = 1, colour = "gray70"))
+ theme(  axis.line.y = element_blank())+ theme(axis.text = element_text(colour = "blue")
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=0))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 180, vjust=0.5, hjust=0))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=0))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=25, hjust=0))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=1, hjust=0))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=30))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=10))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=2))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=3))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=2.3))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=2.3))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 45, vjust=1, hjust=2.3))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 45, vjust=1, hjust=1))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 45, vjust=1, hjust=-1))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=1, hjust=-1))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=1, hjust=2))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=2))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 45, vjust=1, hjust=1))
p1 + theme(axis.title.y = element_text(size = rel(1.5), angle = 90))
library(lubridate)
library(dplyr)
library(tidyr)
# 引入資料
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
p <- exData3 %>%
filter(期間>=ymd("2017-01-01")) %>%
ggplot()+
geom_line(aes(x=期間,y=匯率,color=幣別))
library(lubridate)
library(dplyr)
library(tidyr)
# 引入資料
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
library(lubridate)
library(dplyr)
library(tidyr)
# 引入資料
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
library(readr)
X9f65bdb6752389dc713acc27e93c1c38_export <- read_csv("C:/Users/user/Desktop/9f65bdb6752389dc713acc27e93c1c38_export.csv")
View(X9f65bdb6752389dc713acc27e93c1c38_export)
library(lubridate)
library(dplyr)
library(tidyr)
# 引入資料
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
# 處理時間
exData$期間 %>% paste0("-01") %>% ymd() -> exData$期間
# 處理資料結構
exData %>% select(期間, "歐元USD/EUR","韓元KRW/USD","人民幣CNY/USD", "日圓JPY/USD", "新台幣NTD/USD") -> exData2
exData2 %>% gather(幣別, 匯率, -期間) -> exData2
# 處理變數class
exData2$幣別 %>% as.factor() -> exData2$幣別
exData2$匯率 %>% as.numeric() -> exData2$匯率
# 以2017年1月為基期
exData2 %>% group_by(幣別) %>%
mutate(匯率=匯率/匯率[期間==ymd("2017-01-01")]*100) %>%
ungroup() ->
exData3
library(lubridate)
library(dplyr)
library(tidyr)
# 引入資料
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
# 處理時間
exData$期間 %>% paste0("-01") %>% ymd() -> exData$期間
# 處理資料結構
exData %>% select(期間, "歐元USD/EUR","韓元KRW/USD","人民幣CNY/USD", "日圓JPY/USD", "新台幣NTD/USD") -> exData2
exData2 %>% gather(幣別, 匯率, -期間) -> exData2
# 處理變數class
exData2$幣別 %>% as.factor() -> exData2$幣別
exData2$匯率 %>% as.numeric() -> exData2$匯率
# 以2017年1月為基期
exData2 %>% group_by(幣別) %>%
mutate(匯率=匯率/匯率[期間==ymd("2017-01-01")]*100) %>%
ungroup() ->
exData3
p <- exData3 %>%
filter(期間>=ymd("2017-01-01")) %>%
ggplot()+
geom_line(aes(x=期間,y=匯率,color=幣別))
p
library(ggplot2)
library(dplyr)
library(showtext)
font_add("QYuan","cwTeXQYuan-Medium.ttf") # 新增字體
library(ggplot2)
library(dplyr)
library(showtext)
showtext_auto(enable=TRUE)
theme_set(theme_classic())
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point()
p1
p1+
theme(panel.grid.major.y=element_line())->p1
p1
p1+
theme(panel.grid.major.y=element_line(color = "#adadad",size = 0.1))->p2
p2
p1 + theme(axis.line = element_line(size = 3, colour = "grey80"))
p2
p2+theme(
axis.line.y = element_blank()
)
p2+theme(
axis.line.y = element_line(size=0)
)
p2 + theme(
axis.line.y = element_blank(), #or-> element_line(size = 0)
axis.ticks.y = element_blank()
) -> p3
p2 + theme(
axis.line.y = element_blank(), #or-> element_line(size = 0)
axis.ticks.y = element_blank()
) -> p3
p2 + theme(
axis.line.y = element_blank(), #or-> element_line(size = 0)
axis.ticks.y = element_blank()
) -> p3
p2 + theme(
axis.line.y = element_blank(), #or-> element_line(size = 0)
axis.ticks.y = element_blank()
) -> p3
p1 + theme(axis.text = element_text(colour = "blue"), axis.text.x = element_text(hjust=1))
mtcars2 <- mtcars[1:15, ]
mtcars2$name <- row.names(mtcars2)
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle = 90,hjust=0,vjust=0.5)) #angle = 90, vjust=0.5, hjust=0
ggplot(mtcars2, aes(x = name, y = mpg, fill = name)) +
geom_bar(stat = 'identity', position = "identity") +
guides(fill = FALSE) +
theme(axis.text.x = element_text(angle=90,
hjust=1,
vjust=1)) #angle = 90, vjust=0.5, hjust=0
p3 + theme(axis.title.y = element_text(size = rel(1), angle = 0))
library(lubridate)
library(dplyr)
library(tidyr)
library(readr)
# 引入資料
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
# 處理時間
exData$期間 %>% paste0("-01") %>% ymd() -> exData$期間
# 處理資料結構
exData %>% select(期間, "歐元USD/EUR","韓元KRW/USD","人民幣CNY/USD", "日圓JPY/USD", "新台幣NTD/USD") -> exData2
exData2 %>% gather(幣別, 匯率, -期間) -> exData2
# 處理變數class
exData2$幣別 %>% as.factor() -> exData2$幣別
exData2$匯率 %>% as.numeric() -> exData2$匯率
# 處理歐元
exData2$匯率[exData2$幣別=="歐元USD/EUR"]<-1/exData2$匯率[exData2$幣別=="歐元USD/EUR"]
# 以2017年1月為基期
exData2 %>% group_by(幣別) %>%
mutate(匯率=匯率/匯率[期間==ymd("2017-01-01")]*100) %>%
ungroup() ->
exData3
exData2 %>% filter(期間>=ymd("2017-01-01")) %>% ggplot()+
geom_line(aes(x=期間,y=匯率,color=幣別))
p <- exData3 %>%
filter(期間>=ymd("2017-01-01")) %>%
ggplot()+
geom_line(aes(x=期間,y=匯率,color=幣別))
p
exData3 %>%
filter(期間>=ymd("2017-01-01")) -> exData4
exData4$幣別 %>% levels
exData4TW <- exData4 %>% filter(幣別=="新台幣NTD/USD")
exData4others <- exData4 %>% filter(幣別!="新台幣NTD/USD")
exData4others %>% ggplot(aes(x=期間,y=匯率))+
geom_line(aes(color=幣別))+
geom_line(data=exData4TW)
exData4 %>% ggplot(aes(x=期間,y=匯率))+
geom_line(aes(color=幣別))
reader::locale()
readr::locale()
